{"version":3,"file":"static/js/src_Component_Calendar_js-webpack_sharing_consume_default_iobroker_vis-2-widgets-react-dev_io-4dd1d1.9fe897d3.chunk.js","mappings":"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","sources":["Component/Utils.js","Component/EventDialog.js","Component/Calendar.js"],"sourcesContent":["function sortNumbers(a, b) {\r\n    return a - b;\r\n}\r\n\r\nfunction oneCron2Array(str) {\r\n    if (str === '*' || str === '?' || str === '') return str;\r\n\r\n    const parts = str.split(',');\r\n    const result = [];\r\n    for (let p = 0; p < parts.length; p++) {\r\n        const m = parts[p].match(/(\\d+)-(\\d+)/);\r\n        if (m) {\r\n            for (let mm = parseInt(m[1], 10); mm <= parseInt(m[2], 10); mm++) {\r\n                result.push(mm);\r\n            }\r\n        } else {\r\n            result.push(parseInt(parts[p], 10));\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction cron2obj(str, date) {\r\n    const cron = {};\r\n    // date can be 2016-08-07T45:45:35\r\n    if (date) {\r\n        const b = date.split(/\\D/);\r\n        cron.seconds     = [parseInt(b[5], 10)]; // 0 - 59\r\n        cron.minutes     = [parseInt(b[4], 10)]; // 0 - 59\r\n        cron.hours       = [parseInt(b[3], 10)]; // 0 - 23\r\n        cron.dates       = [parseInt(b[2], 10)]; // 1 - 31\r\n        cron.months      = [parseInt(b[1], 10)]; // 1 - 12\r\n        cron.dows        = '?'; // 0 - 6\r\n    } else {\r\n        const parts = str.replace(/\\s\\s/g, ' ').replace(/\\s\\s/g, ' ').split(' ');\r\n        if (parts.length === 6) {\r\n            cron.seconds = oneCron2Array(parts[0]); // 0 - 59\r\n            cron.minutes = oneCron2Array(parts[1]); // 0 - 59\r\n            cron.hours   = oneCron2Array(parts[2]); // 0 - 23\r\n            cron.dates   = oneCron2Array(parts[3]); // 1 - 31\r\n            cron.months  = oneCron2Array(parts[4]); // 1 - 12\r\n            cron.dows    = oneCron2Array(parts[5]); // 0 - 6\r\n        } else {\r\n            cron.seconds = [0];                     // 0 - 59\r\n            cron.minutes = oneCron2Array(parts[0]); // 0 - 59\r\n            cron.hours   = oneCron2Array(parts[1]); // 0 - 23\r\n            cron.dates   = oneCron2Array(parts[2]); // 1 - 31\r\n            cron.months  = oneCron2Array(parts[3]); // 1 - 12\r\n            cron.dows    = oneCron2Array(parts[4]); // 0 - 6\r\n        }\r\n    }\r\n\r\n    return cron;\r\n}\r\n\r\nfunction array2oneCron(obj) {\r\n    if (obj === '*' || obj === '?') return obj;\r\n    if (typeof obj === 'string') obj = parseInt(obj, 10);\r\n    if (typeof obj !== 'object') obj = [obj];\r\n    obj.sort(sortNumbers);\r\n    if (obj.length < 3) return obj.join(',');\r\n\r\n    const newObj = [];\r\n    let start = obj[0];\r\n    let end = obj[0];\r\n\r\n    for (let i = 1; i < obj.length; i++) {\r\n        if (obj[i] === end + 1) {\r\n            end++;\r\n        } else {\r\n            if (start !== end) {\r\n                if (start + 1 === end) {\r\n                    newObj.push(`${start},${end}`);\r\n                } else {\r\n                    newObj.push(`${start}-${end}`);\r\n                }\r\n            } else {\r\n                newObj.push(start);\r\n            }\r\n            start = obj[i];\r\n            end = obj[i];\r\n        }\r\n    }\r\n    if (start !== end) {\r\n        if (start + 1 === end) {\r\n            newObj.push(`${start},${end}`);\r\n        } else {\r\n            newObj.push(`${start}-${end}`);\r\n        }\r\n    } else {\r\n        newObj.push(start);\r\n    }\r\n\r\n    return newObj.join(',');\r\n}\r\n\r\nfunction obj2cron(cron) {\r\n    const parts = ['*', '*', '*', '*', '*', '?'];\r\n    if (cron.seconds) {\r\n        parts[0] = array2oneCron(cron.seconds);\r\n    }\r\n    parts[1] = array2oneCron(cron.minutes);\r\n    parts[2] = array2oneCron(cron.hours);\r\n    parts[3] = array2oneCron(cron.dates);\r\n    parts[4] = array2oneCron(cron.months);\r\n    parts[5] = array2oneCron(cron.dows);\r\n    if (parts[0] === '0') parts.shift();\r\n    return parts.join(' ');\r\n}\r\n\r\nfunction serverDateToClient(dateString, format, serverTimeZone) {\r\n    if (format === 'cron') {\r\n        const cronObject = cron2obj(dateString);\r\n        let date = new Date();\r\n        date.setHours(cronObject.hours[0], cronObject.minutes[0]);\r\n        date = new Date(date.getTime() - (date.getTimezoneOffset() + serverTimeZone) * 60000);\r\n        return date;\r\n    }\r\n    if (format === 'date') {\r\n        dateString += 'Z';\r\n        return new Date(new Date(dateString).getTime() - serverTimeZone * 60000);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction clientDateToServer(date, format, serverTimeZone) {\r\n    if (format === 'cron') {\r\n        date = new Date(date.getTime() + (date.getTimezoneOffset() + serverTimeZone) * 60000);\r\n        const cronObject = {\r\n            minutes: [date.getMinutes()],\r\n            hours: [date.getHours()],\r\n        };\r\n        return cronObject;\r\n    }\r\n    if (format === 'date') {\r\n        date = new Date(date.getTime() + serverTimeZone * 60000);\r\n        const dateStr = date.toISOString();\r\n        return dateStr.substring(0, dateStr.length - 5);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport {\r\n    cron2obj, obj2cron, serverDateToClient, clientDateToServer,\r\n};\r\n","import {\r\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, InputAdornment, InputLabel, MenuItem, Select, TextField,\r\n} from '@mui/material';\r\nimport { Cancel, Delete, Save } from '@mui/icons-material';\r\nimport {\r\n    ColorPicker, SelectID, Confirm,\r\n} from '@iobroker/adapter-react-v5';\r\nimport { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\r\nimport moment from 'moment';\r\nimport { withStyles } from '@mui/styles';\r\nimport {\r\n    clientDateToServer, cron2obj, obj2cron, serverDateToClient,\r\n} from './Utils';\r\n\r\nconst typeDescriptions = {\r\n    single: 'single_description',\r\n    double: 'double_description',\r\n    toggle: 'toggle_description',\r\n};\r\n\r\nconst styles = {\r\n    field: {\r\n        padding: '2px 0px',\r\n    },\r\n    tableCell: {\r\n        textAlign: 'center',\r\n    },\r\n    dialogActions: {\r\n        justifyContent: 'space-between',\r\n    },\r\n    dialogActionsRight: {\r\n        display: 'flex',\r\n        gap: 8,\r\n    },\r\n    typeDescription: {\r\n        fontSize: 12,\r\n        whiteSpace: 'normal',\r\n        fontStyle: 'italic',\r\n    },\r\n    selectId: {\r\n        display: 'flex',\r\n    },\r\n};\r\n\r\nconst EventDialog = props => {\r\n    const [idDialog, setIdDialog] = useState(false);\r\n    const [event, setEvent] = useState(props.event);\r\n    const [object, setObject] = useState(null);\r\n    const [deleteDialog, setDeleteDialog] = useState(false);\r\n    const updateObject = async id => {\r\n        if (id) {\r\n            setObject(await props.socket.getObject(id));\r\n        } else {\r\n            setObject(null);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setEvent(props.event);\r\n        updateObject(event?.native.oid);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.open]);\r\n\r\n    const cronObject = event?.native.cron ? cron2obj(event?.native.cron) : null;\r\n    let period = 'once';\r\n    if (Array.isArray(cronObject?.months)) {\r\n        period = 'monthly';\r\n    } else if (Array.isArray(cronObject?.dows)) {\r\n        period = 'daily';\r\n    }\r\n\r\n    let date;\r\n\r\n    if (event) {\r\n        if (period === 'once') {\r\n            date = serverDateToClient(event.native.start, 'date', props.serverTimeZone);\r\n        } else if (period === 'monthly' || period === 'daily') {\r\n            date = serverDateToClient(event.native.cron, 'cron', props.serverTimeZone);\r\n        }\r\n    }\r\n\r\n    const changeEvent = modify => {\r\n        const newEvent = JSON.parse(JSON.stringify(event));\r\n        modify(newEvent);\r\n        setEvent(newEvent);\r\n    };\r\n\r\n    const valueField = (field, name) => {\r\n        if (!object) {\r\n            return null;\r\n        }\r\n        if (object.common.type === 'boolean') {\r\n            return <FormControlLabel\r\n                control={<Checkbox\r\n                    checked={!!event?.native[field]}\r\n                    disabled={props.readOnly}\r\n                    onChange={e => {\r\n                        changeEvent(newEvent => newEvent.native[field] = e.target.checked);\r\n                    }}\r\n                />}\r\n                label={props.t(name)}\r\n            />;\r\n        } if (object.common.states) {\r\n            return <FormControl\r\n                fullWidth\r\n                variant=\"standard\"\r\n            >\r\n                <InputLabel>{props.t(name)}</InputLabel>\r\n                <Select\r\n                    value={event?.native[field] || ''}\r\n                    disabled={props.readOnly}\r\n                    onChange={e => {\r\n                        changeEvent(newEvent => newEvent.native[field] = e.target.value);\r\n                    }}\r\n                >\r\n                    {Object.keys(object.common.states)\r\n                        .map(option => <MenuItem key={option} value={option}>{object.common.states[option]}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>;\r\n        }\r\n        return <TextField\r\n            label={props.t(name)}\r\n            value={event?.native[field] || ''}\r\n            disabled={props.readOnly}\r\n            onChange={e =>\r\n                changeEvent(newEvent => newEvent.native[field] = e.target.value)}\r\n            variant=\"standard\"\r\n            fullWidth\r\n        />;\r\n    };\r\n\r\n    return <Dialog open={props.open} onClose={props.onClose} fullWidth>\r\n        <DialogTitle>{props.t('Configure event')}</DialogTitle>\r\n        <DialogContent>\r\n            {idDialog && <SelectID\r\n                selected={event?.native.oid}\r\n                disabled={props.readOnly}\r\n                onOk={id => {\r\n                    changeEvent(newEvent => newEvent.native.oid = id);\r\n                    setIdDialog(false);\r\n                    updateObject(id);\r\n                }}\r\n                onClose={() => setIdDialog(false)}\r\n                socket={props.socket}\r\n            />}\r\n            <div className={props.classes.field}>\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                        checked={!!event?.common.enabled}\r\n                        disabled={props.readOnly}\r\n                        onChange={e =>\r\n                            changeEvent(newEvent => newEvent.common.enabled = e.target.checked)}\r\n                    />}\r\n                    label={props.t('Active')}\r\n                />\r\n            </div>\r\n            <div className={props.classes.field}>\r\n                <FormControl\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                >\r\n                    <InputLabel>{props.t('Event type')}</InputLabel>\r\n                    <Select\r\n                        value={event?.native.type || ''}\r\n                        disabled={props.readOnly}\r\n                        onChange={e =>\r\n                            changeEvent(newEvent => newEvent.native.type = e.target.value)}\r\n                        renderValue={value => props.t(value)}\r\n                    >\r\n                        {['single', 'double', 'toggle'].map(type =>\r\n                            <MenuItem key={type} value={type}>\r\n                                <div>\r\n                                    <div>{props.t(type)}</div>\r\n                                    <div className={props.classes.typeDescription}>{props.t(typeDescriptions[type])}</div>\r\n                                </div>\r\n                            </MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className={props.classes.field}>\r\n                <LocalizationProvider dateAdapter={AdapterMoment}>\r\n                    <TimePicker\r\n                        label={props.t('Time')}\r\n                        value={date || null}\r\n                        disabled={props.readOnly}\r\n                        onChange={_date => {\r\n                            if (!_date) {\r\n                                return;\r\n                            }\r\n                            try {\r\n                                changeEvent(newEvent => {\r\n                                    if (period === 'once') {\r\n                                        newEvent.native.start = clientDateToServer(_date.toDate(), 'date', props.serverTimeZone);\r\n                                    } else if (period === 'monthly' || period === 'daily') {\r\n                                        const newCron = cron2obj(newEvent.native.cron);\r\n                                        const timeZoneCron = clientDateToServer(_date.toDate(), 'cron', props.serverTimeZone);\r\n                                        newCron.hours = timeZoneCron.hours;\r\n                                        newCron.minutes = timeZoneCron.minutes;\r\n                                        newEvent.native.cron = obj2cron(newCron);\r\n                                    }\r\n                                });\r\n                            } catch {\r\n                                //\r\n                            }\r\n                        }}\r\n                        renderInput={params => <TextField {...params} variant=\"standard\" fullWidth />}\r\n                        ampm={false}\r\n                    />\r\n                </LocalizationProvider>\r\n            </div>\r\n            {event?.native.type !== 'single' && <div className={props.classes.field}>\r\n                <TextField\r\n                    label={props.t('Duration')}\r\n                    value={(event?.native.intervals?.[0].timeOffset || 0) / 1000 / 60}\r\n                    disabled={props.readOnly}\r\n                    onChange={e =>\r\n                        changeEvent(newEvent => newEvent.native.intervals[0].timeOffset = e.target.value * 1000 * 60)}\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                        endAdornment: <InputAdornment position=\"end\">{props.t('minutes')}</InputAdornment>,\r\n                    }}\r\n                />\r\n            </div>}\r\n            <div className={props.classes.field}>\r\n                <div className={props.classes.selectId}>\r\n                    <TextField\r\n                        label=\"Object ID\"\r\n                        value={event?.native.oid || ''}\r\n                        disabled={props.readOnly}\r\n                        onChange={e => {\r\n                            changeEvent(newEvent => newEvent.native.oid = e.target.value);\r\n                            updateObject(e.target.value);\r\n                        }}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                    />\r\n                    <Button onClick={() => setIdDialog(true)}>...</Button>\r\n                </div>\r\n            </div>\r\n            <div className={props.classes.field}>\r\n                {valueField('startValue', event?.native.type === 'toggle' ? 'First value' : 'Start value')}\r\n            </div>\r\n            {event?.native.type === 'double' && <div className={props.classes.field}>\r\n                {valueField('endValue', 'End value')}\r\n            </div>}\r\n            <div className={props.classes.field}>\r\n                <FormControl\r\n                    fullWidth\r\n                    variant=\"standard\"\r\n                >\r\n                    <InputLabel>{props.t('Period')}</InputLabel>\r\n                    <Select\r\n                        value={period || 'once'}\r\n                        disabled={props.readOnly}\r\n                        onChange={e => {\r\n                            if (e.target.value === event.native.cron) {\r\n                                return;\r\n                            }\r\n                            changeEvent(newEvent => {\r\n                                if (e.target.value === 'once') {\r\n                                    delete newEvent.native.cron;\r\n                                    newEvent.native.start = clientDateToServer(date, 'date', props.serverTimeZone);\r\n                                } else if (e.target.value === 'daily') {\r\n                                    delete newEvent.native.start;\r\n                                    const newCronObject = cron2obj('0 0 ? * 0-6');\r\n                                    const timeZoneCron = clientDateToServer(date, 'cron', props.serverTimeZone);\r\n                                    newCronObject.hours = timeZoneCron.hours;\r\n                                    newCronObject.minutes = timeZoneCron.minutes;\r\n                                    newEvent.native.cron = obj2cron(newCronObject);\r\n                                } else if (e.target.value === 'monthly') {\r\n                                    delete newEvent.native.start;\r\n                                    const newCronObject = cron2obj('0 0 ? 1-12 ?');\r\n                                    const timeZoneCron = clientDateToServer(date, 'cron', props.serverTimeZone);\r\n                                    newCronObject.hours = timeZoneCron.hours;\r\n                                    newCronObject.minutes = timeZoneCron.minutes;\r\n                                    newEvent.native.cron = obj2cron(newCronObject);\r\n                                }\r\n                            });\r\n                        }}\r\n                    >\r\n                        {['once', 'daily', 'monthly'].map(type => <MenuItem key={type} value={type}>{props.t(type)}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            {period === 'monthly' && <div className={props.classes.field}>\r\n                <table>\r\n                    <tr>\r\n                        {new Array(12).fill(null).map((value, i) => <td\r\n                            className={props.classes.tableCell}\r\n                        >\r\n                            {moment().month(i).format('MMM')}\r\n                        </td>)}\r\n                    </tr>\r\n                    <tr>\r\n                        {new Array(12).fill(null).map((value, i) => <td>\r\n                            <Checkbox\r\n                                checked={cronObject?.months?.includes(i + 1) || false}\r\n                                disabled={props.readOnly}\r\n                                onChange={e => {\r\n                                    changeEvent(newEvent => {\r\n                                        const newCronObject = cron2obj(newEvent.native.cron);\r\n                                        if (e.target.checked) {\r\n                                            newCronObject.months.push(i + 1);\r\n                                        } else {\r\n                                            newCronObject.months = newCronObject.months.filter(month => month !== i + 1);\r\n                                        }\r\n                                        newEvent.native.cron = obj2cron(newCronObject);\r\n                                    });\r\n                                }}\r\n                                size=\"small\"\r\n                            />\r\n                        </td>)}\r\n                    </tr>\r\n                </table>\r\n            </div>}\r\n            {period === 'daily' && <div className={props.classes.field}>\r\n                <table>\r\n                    <tr>\r\n                        {new Array(7).fill(null).map((value, i) => <td\r\n                            className={props.classes.tableCell}\r\n                        >\r\n                            {moment().day(i).format('ddd')}\r\n                        </td>)}\r\n                    </tr>\r\n                    <tr>\r\n                        {new Array(7).fill(null).map((value, i) => <td>\r\n                            <Checkbox\r\n                                checked={cronObject?.dows?.includes(i) || false}\r\n                                disabled={props.readOnly}\r\n                                onChange={e => {\r\n                                    changeEvent(newEvent => {\r\n                                        const newCronObject = cron2obj(newEvent.native.cron);\r\n                                        if (e.target.checked) {\r\n                                            newCronObject.dows.push(i);\r\n                                        } else {\r\n                                            newCronObject.dows = newCronObject.dows.filter(dow => dow !== i);\r\n                                        }\r\n                                        newEvent.native.cron = obj2cron(newCronObject);\r\n                                    });\r\n                                }}\r\n                                size=\"small\"\r\n                            />\r\n                        </td>)}\r\n                    </tr>\r\n                </table>\r\n            </div>}\r\n            <div className={props.classes.field}>\r\n                <TextField\r\n                    label=\"Description\"\r\n                    value={event?.common.name || ''}\r\n                    disabled={props.readOnly}\r\n                    onChange={e =>\r\n                        changeEvent(newEvent => newEvent.common.name = e.target.value)}\r\n                    variant=\"standard\"\r\n                    fullWidth\r\n                />\r\n            </div>\r\n            <div className={props.classes.field}>\r\n                <ColorPicker\r\n                    value={event?.native.color || ''}\r\n                    disabled={props.readOnly}\r\n                    onChange={color =>\r\n                        changeEvent(newEvent => newEvent.native.color = color)}\r\n                    name={props.t('Color')}\r\n                />\r\n            </div>\r\n            {/* <pre>\r\n                {JSON.stringify(event, null, 2)}\r\n            </pre> */}\r\n        </DialogContent>\r\n        <DialogActions className={props.classes.dialogActions}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<Delete />}\r\n                disabled={props.readOnly}\r\n                onClick={() => setDeleteDialog(true)}\r\n            >\r\n                {props.t('Delete')}\r\n            </Button>\r\n            <div className={props.classes.dialogActionsRight}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={JSON.stringify(props.event) === JSON.stringify(event) || props.readOnly}\r\n                    startIcon={<Save />}\r\n                    onClick={async () => {\r\n                        await props.socket.setObject(event._id, event);\r\n                        props.updateEvents();\r\n                        props.onClose();\r\n                    }}\r\n                >\r\n                    {props.t('Save')}\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"grey\"\r\n                    startIcon={<Cancel />}\r\n                    onClick={props.onClose}\r\n                >\r\n                    {props.t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        </DialogActions>\r\n        {deleteDialog && <Confirm\r\n            title={props.t('Delete event')}\r\n            text={props.t('All data will be lost. Confirm?')}\r\n            suppressQuestionMinutes={5}\r\n            dialogName=\"deleteConfirmDialog\"\r\n            onClose={async isYes => {\r\n                if (isYes) {\r\n                    await props.socket.delObject(event._id);\r\n                    props.updateEvents();\r\n                    props.onClose();\r\n                }\r\n                setDeleteDialog(false);\r\n            }}\r\n        />}\r\n    </Dialog>;\r\n};\r\n\r\nEventDialog.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    event: PropTypes.object,\r\n    updateEvents: PropTypes.func.isRequired,\r\n    serverTimeZone: PropTypes.number.isRequired,\r\n    t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EventDialog);\r\n","import FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\r\nimport rrulePlugin from '@fullcalendar/rrule';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport deLocale from '@fullcalendar/core/locales/de';\r\nimport ruLocale from '@fullcalendar/core/locales/ru';\r\nimport ptLocale from '@fullcalendar/core/locales/pt';\r\nimport nlLocale from '@fullcalendar/core/locales/nl';\r\nimport frLocale from '@fullcalendar/core/locales/fr';\r\nimport itLocale from '@fullcalendar/core/locales/it';\r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport plLocale from '@fullcalendar/core/locales/pl';\r\nimport ukLocale from '@fullcalendar/core/locales/uk';\r\nimport zhCnLocale from '@fullcalendar/core/locales/zh-cn';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Paper,\r\n} from '@mui/material';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { withStyles, withTheme } from '@mui/styles';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    clientDateToServer, cron2obj, obj2cron, serverDateToClient,\r\n} from './Utils';\r\nimport EventDialog from './EventDialog';\r\n\r\nconst eventTypes = [\r\n    { type: 'single', name: 'Single event' },\r\n    { type: 'double', name: 'Double event' },\r\n    { type: 'toggle', name: 'Toggle event' },\r\n];\r\n\r\nconst DraggableButton = ({ type, t }) => {\r\n    const ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const draggable = new Draggable(ref.current, {\r\n            eventData: () => ({\r\n                id: type.type,\r\n                title: t(type.name),\r\n                create: true,\r\n                extendedProps: {\r\n                    type: type.type,\r\n                },\r\n            }),\r\n        });\r\n        return () => {\r\n            draggable.destroy();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return <div\r\n        style={{\r\n            backgroundColor: 'rgb(58, 135, 178)',\r\n            color: 'white',\r\n            cursor: 'pointer',\r\n            fontSize: '14px',\r\n            padding: '3px 4px 6px 8px',\r\n            borderRadius: 4,\r\n            marginBottom: 20,\r\n        }}\r\n        ref={ref}\r\n    >\r\n        {t(type.name)}\r\n    </div>;\r\n};\r\n\r\nconst styles = () => ({\r\n    container: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        width: '100%',\r\n    },\r\n    leftBlock: {\r\n        width: 200,\r\n    },\r\n    calendarBlock: {\r\n        flex: 1,\r\n        display: 'flex',\r\n    },\r\n    calendar: {\r\n        // height: '80%',\r\n        marginRight: 20,\r\n        width: '100%',\r\n    },\r\n    leftPaper: {\r\n        margin: 20,\r\n    },\r\n    leftContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px 10px',\r\n    },\r\n    hr: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nfunction Calendar(props) {\r\n    const [eventDialog, setEventDialog] = useState(null);\r\n    const [lastDateClick, setLastDateClick] = useState(null);\r\n\r\n    const events = props.events.map(event => {\r\n        if (event.native.cron) {\r\n            const start = serverDateToClient(event.native.cron, 'cron', props.serverTimeZone);\r\n            const cronObject = cron2obj(event.native.cron);\r\n            start.setFullYear(1970);\r\n            if (Array.isArray(cronObject.months)) {\r\n                return {\r\n                    id: event._id,\r\n                    title: event.common.name,\r\n                    backgroundColor: event.native.color,\r\n                    start,\r\n                    duration: (event.native.intervals?.[0].timeOffset || 0),\r\n                    allDay: false,\r\n                    rrule: {\r\n                        dtstart: new Date(start.getTime() - start.getTimezoneOffset() * 60000),\r\n                        freq: 'daily',\r\n                        bymonth: cronObject.months,\r\n                    },\r\n                };\r\n            }\r\n            if (Array.isArray(cronObject.dows)) {\r\n                return {\r\n                    id: event._id,\r\n                    title: event.common.name,\r\n                    backgroundColor: event.native.color,\r\n                    start,\r\n                    duration: (event.native.intervals?.[0].timeOffset || 0),\r\n                    allDay: false,\r\n                    display: 'block',\r\n                    rrule: {\r\n                        dtstart: new Date(start.getTime() - start.getTimezoneOffset() * 60000),\r\n                        freq: 'weekly',\r\n                        byweekday: cronObject.dows.map(dow => (dow === 0 ? 6 : dow - 1)),\r\n                    },\r\n                };\r\n            }\r\n            return {\r\n                id: event._id,\r\n                title: event.common.name,\r\n                backgroundColor: event.native.color,\r\n            };\r\n        }\r\n        return {\r\n            id: event._id,\r\n            title: event.common.name,\r\n            display: 'block',\r\n            backgroundColor: event.native.color,\r\n            start: serverDateToClient(event.native.start, 'date', props.serverTimeZone),\r\n            end: new Date(event.native.start).getTime() + (event.native.intervals?.[0].timeOffset || 0),\r\n        };\r\n    });\r\n\r\n    return <>\r\n        <style>\r\n            {props.theme.palette.mode === 'dark' ? `\r\n:root {\r\n    --fc-neutral-bg-color: hsla(0,0%,12%);\r\n    --fc-list-event-hover-bg-color: hsla(0,0%,12%);\r\n}\r\n.fc-col-header-cell {\r\n    background-color: #1e1e1e;\r\n}                \r\n` : `\r\n.fc-col-header-cell {\r\n    background-color: #EEEEEE;\r\n}\r\n`}\r\n        </style>\r\n        <EventDialog\r\n            open={!!eventDialog}\r\n            event={props.events.find(event => event._id === eventDialog)}\r\n            onClose={() => setEventDialog(null)}\r\n            socket={props.socket}\r\n            updateEvents={props.updateEvents}\r\n            serverTimeZone={props.serverTimeZone}\r\n            readOnly={props.readOnly}\r\n            t={props.t}\r\n        />\r\n        <div className={props.classes.container}>\r\n            {!props.hideLeftBlock && !props.readOnly && <div className={props.classes.leftBlock}>\r\n                <Paper elevation={4} className={props.classes.leftPaper}>\r\n                    <div className={props.classes.leftContent}>\r\n                        <h4>{props.t('Events')}</h4>\r\n                        {eventTypes.map((type, index) =>\r\n                            <DraggableButton\r\n                                t={props.t}\r\n                                type={type}\r\n                                name={props.t(type.name)}\r\n                                key={type.type}\r\n                                index={index}\r\n                            />)}\r\n                        <div>{props.t('Drag and drop the events above to create a new one.')}</div>\r\n                        <hr className={props.classes.hr} />\r\n                        <div>{props.t('Use ALT by dragging it to copy the events.')}</div>\r\n                    </div>\r\n                </Paper>\r\n            </div>}\r\n            <div className={props.classes.calendarBlock}>\r\n                <div className={props.classes.calendar}>\r\n                    <FullCalendar\r\n                        plugins={[listPlugin, dayGridPlugin, timeGridPlugin, interactionPlugin, rrulePlugin]}\r\n                        headerToolbar={\r\n                            props.hideTopBlock ? false :\r\n                                {\r\n                                    left: 'prev,next today',\r\n                                    center: 'title',\r\n                                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth',\r\n                                }\r\n                        }\r\n                        initialView={props.viewMode || localStorage.getItem('calendarView') || 'dayGridMonth'}\r\n                        initialDate={localStorage.getItem('calendarStart') ? new Date(parseInt(localStorage.getItem('calendarStart'))) : new Date()}\r\n                        editable={!props.readOnly}\r\n                        selectable\r\n                        selectMirror\r\n                        dayMaxEvents\r\n                        events={events}\r\n                        height=\"calc(100% - 20px)\"\r\n                        locales={[\r\n                            deLocale,\r\n                            ruLocale,\r\n                            ptLocale,\r\n                            nlLocale,\r\n                            frLocale,\r\n                            itLocale,\r\n                            esLocale,\r\n                            plLocale,\r\n                            ukLocale,\r\n                            zhCnLocale,\r\n                        ]}\r\n                        locale={props.language}\r\n                        datesSet={date => {\r\n                            localStorage.setItem('calendarStart', date.view.currentStart.getTime());\r\n                            localStorage.setItem('calendarView', date.view.type);\r\n                        }}\r\n                        // select={this.handleDateSelect}\r\n                        // eventContent={event => <MenuItem>\r\n                        //     {event.event.title}\r\n                        // </MenuItem>}\r\n                        eventClick={event => setEventDialog(event.event.id)}\r\n                        eventResize={event => {\r\n                            const eventData = props.events.find(_event => _event._id === event.event.id);\r\n                            if (eventData.native.intervals?.[0].timeOffset) {\r\n                                const newEvent = JSON.parse(JSON.stringify(eventData));\r\n                                newEvent.native.intervals[0].timeOffset += event.endDelta.milliseconds;\r\n                                props.socket.setObject(newEvent._id, newEvent);\r\n                                props.updateEvents();\r\n                            } else {\r\n                                event.revert();\r\n                            }\r\n                        }}\r\n                        eventDrop={async event => {\r\n                            const eventData = props.events.find(_event => _event._id === event.event.id);\r\n                            if (eventData?.native?.cron) {\r\n                                const newEvent = JSON.parse(JSON.stringify(eventData));\r\n                                if (event.jsEvent.altKey) {\r\n                                    newEvent._id = `fullcalendar.${props.instance}.event-${uuidv4()}`;\r\n                                }\r\n                                const newCron = cron2obj(newEvent.native.cron);\r\n                                const timeZoneCron = clientDateToServer(event.event.start, 'cron', props.serverTimeZone);\r\n                                newCron.hours = timeZoneCron.hours;\r\n                                newCron.minutes = timeZoneCron.minutes;\r\n                                newEvent.native.cron = obj2cron(newCron);\r\n                                await props.socket.setObject(newEvent._id, newEvent);\r\n                                props.updateEvents();\r\n                            } else {\r\n                                const newEvent = JSON.parse(JSON.stringify(eventData));\r\n                                if (event.jsEvent.altKey) {\r\n                                    newEvent._id = `fullcalendar.${props.instance}.event-${uuidv4()}`;\r\n                                }\r\n                                newEvent.native.start = clientDateToServer(event.event.start, 'date', props.serverTimeZone);\r\n                                await props.socket.setObject(newEvent._id, newEvent);\r\n                                props.updateEvents();\r\n                            }\r\n                        }}\r\n                        eventReceive={async event => {\r\n                            const newEvent = {\r\n                                _id: `fullcalendar.${props.instance}.event-${uuidv4()}`,\r\n                                common: {\r\n                                    name: event.event.title,\r\n                                    enabled: true,\r\n                                },\r\n                                native: {\r\n                                    id: Date.now(),\r\n                                    start: clientDateToServer(event.event.start, 'date', props.serverTimeZone),\r\n                                    type: event.event.extendedProps.type,\r\n                                    durationEditable: false,\r\n                                    oid: '',\r\n                                    startValue: '',\r\n                                    color: '#3A87AD',\r\n                                },\r\n                                type: 'schedule',\r\n                            };\r\n                            if (event.event.extendedProps.type !== 'single') {\r\n                                newEvent.native.intervals = [{\r\n                                    timeOffset: 30 * 60 * 1000,\r\n                                }];\r\n                            }\r\n                            await props.socket.setObject(newEvent._id, newEvent);\r\n                            props.updateEvents();\r\n                            setTimeout(() => setEventDialog(newEvent._id), 100);\r\n                        }}\r\n                        dateClick={async event => {\r\n                            // detect double click\r\n                            if (lastDateClick && event.dateStr === lastDateClick.dateStr && Date.now() - lastDateClick.ts < 300) {\r\n                                setLastDateClick(null);\r\n\r\n                                const newEvent = {\r\n                                    _id: `fullcalendar.${props.instance}.event-${uuidv4()}`,\r\n                                    common: {\r\n                                        name: props.t('Single event'),\r\n                                        enabled: true,\r\n                                    },\r\n                                    native: {\r\n                                        id: Date.now(),\r\n                                        start: clientDateToServer(event.date, 'date', props.serverTimeZone),\r\n                                        type: 'single',\r\n                                        durationEditable: false,\r\n                                        oid: '',\r\n                                        startValue: '',\r\n                                        color: '#3A87AD',\r\n                                    },\r\n                                    type: 'schedule',\r\n                                };\r\n                                await props.socket.setObject(newEvent._id, newEvent);\r\n                                await props.updateEvents();\r\n                                setTimeout(() => setEventDialog(newEvent._id), 100);\r\n                            } else {\r\n                                setLastDateClick({ dateStr: event.dateStr, ts: Date.now() });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nCalendar.propTypes = {\r\n    events: PropTypes.array,\r\n    serverTimeZone: PropTypes.number,\r\n    theme: PropTypes.object,\r\n    socket: PropTypes.object,\r\n    readOnly: PropTypes.bool,\r\n    hideLeftBlock: PropTypes.bool,\r\n    viewMode: PropTypes.bool,\r\n    updateEvents: PropTypes.func,\r\n    instance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    t: PropTypes.func.isRequired,\r\n    language: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withTheme(withStyles(styles)(Calendar));\r\n"],"names":["sortNumbers","a","b","oneCron2Array","str","parts","result","p","m","mm","cron2obj","date","cron","array2oneCron","obj","newObj","start","end","i","obj2cron","serverDateToClient","dateString","format","serverTimeZone","cronObject","clientDateToServer","dateStr","typeDescriptions","styles","EventDialog","props","idDialog","setIdDialog","event","setEvent","object","setObject","deleteDialog","setDeleteDialog","updateObject","id","period","changeEvent","modify","newEvent","valueField","field","name","e","option","value","type","LocalizationProvider","TimePicker","_date","newCron","timeZoneCron","params","newCronObject","_a","month","dow","color","isYes","eventTypes","DraggableButton","t","ref","draggable","Calendar","eventDialog","setEventDialog","lastDateClick","setLastDateClick","events","index","list","interaction","rrule","de","ru","pt","nl","fr","it","es","pl","uk","eventData","_event"],"sourceRoot":""}