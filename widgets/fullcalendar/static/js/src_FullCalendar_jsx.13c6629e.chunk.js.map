{"version":3,"file":"static/js/src_FullCalendar_jsx.13c6629e.chunk.js","mappings":"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","sources":["FullCalendar.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, withTheme } from '@mui/styles';\r\n\r\nimport { Card, CardContent } from '@mui/material';\r\n\r\nimport {\r\n    I18n,\r\n} from '@iobroker/adapter-react-v5';\r\n\r\nimport { VisRxWidget } from '@iobroker/vis-2-widgets-react-dev';\r\nimport Calendar from './Component/Calendar';\r\n\r\nconst styles = () => ({\r\n    content: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n    },\r\n});\r\n\r\nconst Generic = window.visRxWidget || VisRxWidget;\r\n\r\nclass FullCalendar extends Generic {\r\n    static getWidgetInfo() {\r\n        return {\r\n            id: 'tplFullCalendar',\r\n            visSet: 'fullcalendar',\r\n            visWidgetLabel: 'fullcalendar',  // Label of widget\r\n            visSetLabel: 'set_label', // Label of widget set\r\n            visSetColor: '#112233',\r\n            visName: 'Full calendar',\r\n            visAttrs: [{\r\n                name: 'common',\r\n                fields: [\r\n                    {\r\n                        label: 'instance',\r\n                        name: 'instance',\r\n                        type: 'instance',\r\n                        adapter: 'fullcalendar',\r\n                        isShort: true,\r\n                    },\r\n                    {\r\n                        label: 'read_only',\r\n                        name: 'readOnly',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_left_block',\r\n                        name: 'hideLeftBlock',\r\n                        type: 'checkbox',\r\n                        hidden: data => data.readOnly,\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_left_block_hint',\r\n                        name: 'hideLeftBlockHint',\r\n                        type: 'checkbox',\r\n                        hidden: data => data.readOnly || data.hideLeftBlock,\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_top_block',\r\n                        name: 'hideTopBlock',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_top_block_buttons',\r\n                        name: 'hideTopBlockButtons',\r\n                        type: 'checkbox',\r\n                        hidden: data => data.hide_top_block,\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'hide_weekends',\r\n                        name: 'hideWeekends',\r\n                        type: 'checkbox',\r\n                        default: false,\r\n                    },\r\n                    {\r\n                        label: 'view_mode',\r\n                        name: 'viewMode',\r\n                        type: 'select',\r\n                        options: [\r\n                            { label: 'full_calendar_dayGridMonth', value: 'dayGridMonth' },\r\n                            { label: 'full_calendar_timeGridWeek', value: 'timeGridWeek' },\r\n                            { label: 'full_calendar_timeGridDay', value: 'timeGridDay' },\r\n                            { label: 'full_calendar_listMonth', value: 'listMonth' },\r\n                        ],\r\n                        default: 'dayGridMonth',\r\n                    },\r\n                    {\r\n                        label: 'name',\r\n                        name: 'name',\r\n                        tooltip: 'used_only_with_relative',\r\n                        default: '',\r\n                        hidden: (data, index, style) => style && style.position !== 'relative',\r\n                    },\r\n                ],\r\n            }],\r\n            visDefaultStyle: {\r\n                width: '100%',\r\n                height: 355,\r\n                position: 'relative',\r\n            },\r\n            visPrev: 'widgets/fullcalendar/img/prev_fullcalendar.png',\r\n        };\r\n    }\r\n\r\n    static t(key, ...args) {\r\n        return I18n.t(`full_calendar_${key}`, ...args);\r\n    }\r\n\r\n    // eslint-disable-next-line class-methods-use-this\r\n    getWidgetInfo() {\r\n        return FullCalendar.getWidgetInfo();\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.widgetRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.props.socket.subscribeObject(`fullcalendar.${this.state.rxData.instance}.*`, this.onEventsChanged);\r\n\r\n        this.updateEvents();\r\n    }\r\n\r\n    onEventsChanged = (id, obj) => {\r\n        const events = JSON.parse(JSON.stringify(this.state.events));\r\n        const eventPos = events.findIndex(e => e._id === id);\r\n        if (eventPos !== -1) {\r\n            if (obj) {\r\n                events[eventPos] = obj;\r\n            } else {\r\n                events.splice(eventPos, 1);\r\n            }\r\n        } else {\r\n            events.push(obj);\r\n        }\r\n        this.setState({ events });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeObject(`fullcalendar.${this.state.rxData.instance}.*`, this.onEventsChanged);\r\n        super.componentWillUnmount();\r\n    }\r\n\r\n    onRxDataChanged() {\r\n        this.updateEvents();\r\n    }\r\n\r\n    updateEvents = async () => {\r\n        const objects = await this.props.socket.getObjectViewCustom(\r\n            'schedule',\r\n            'schedule',\r\n            `fullcalendar.${this.state.rxData.instance}.`,\r\n            `fullcalendar.${this.state.rxData.instance}.\\u9999`,\r\n        );\r\n        let serverTimeZone = 0;\r\n        try {\r\n            const state = await this.props.socket.getState('fullcalendar.0.info.timeZone');\r\n            serverTimeZone = state?.val || 0;\r\n        } catch (e) {\r\n            // ignore\r\n        }\r\n        this.setState({ events: Object.values(objects), serverTimeZone });\r\n    };\r\n\r\n    changeEvents = events => {\r\n        this.setState({ events });\r\n    };\r\n\r\n    renderWidgetBody(props) {\r\n        super.renderWidgetBody(props);\r\n\r\n        if (!this.widgetRef.current?.offsetWidth) {\r\n            this.forceUpdate();\r\n        }\r\n\r\n        /* let width = (this.widgetRef.current?.offsetWidth || 0) - (this.state.rxData.hideDow ? 0 : 80);\r\n        if (width < 0) {\r\n            width = 0;\r\n        } */\r\n\r\n        const content = <div\r\n            className={this.props.classes.content}\r\n            ref={this.widgetRef}\r\n        >\r\n            <Calendar\r\n                widget\r\n                systemConfig={this.props.systemConfig?.common}\r\n                key={this.state.rxData.viewMode}\r\n                events={this.state.events || []}\r\n                socket={this.props.socket}\r\n                instance={this.state.rxData.instance}\r\n                changeEvents={this.changeEvents}\r\n                updateEvents={this.updateEvents}\r\n                serverTimeZone={this.state.serverTimeZone || 0}\r\n                readOnly={this.state.rxData.readOnly || false}\r\n                hideLeftBlock={this.state.rxData.hideLeftBlock || false}\r\n                hideTopBlock={this.state.rxData.hideTopBlock || false}\r\n                hideLeftBlockHint={this.state.rxData.hideLeftBlockHint || false}\r\n                hideTopBlockButtons={this.state.rxData.hideTopBlockButtons || false}\r\n                viewMode={this.state.rxData.viewMode || null}\r\n                storageName={`fc_${this.props.id}`}\r\n                hideWeekends={this.state.rxData.hideWeekends || false}\r\n                t={FullCalendar.t}\r\n                language={I18n.getLanguage()}\r\n            />\r\n        </div>;\r\n\r\n        if (this.state.rxStyle.position === 'relative') {\r\n            return this.wrapContent(content, null, { height: 'calc(100% - 24px)', width: 'calc(100% - 24px)' }, null, null, { Card, CardContent });\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nFullCalendar.propTypes = {\r\n    systemConfig: PropTypes.object,\r\n    socket: PropTypes.object,\r\n    themeType: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(withTheme(FullCalendar));\r\n"],"names":["styles","Generic","FullCalendar","props","id","obj","events","eventPos","e","objects","serverTimeZone","state","data","index","style","key","args","content"],"sourceRoot":""}